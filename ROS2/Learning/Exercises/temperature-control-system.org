* Temperature Control Systems
A room is equiped with an automated temperature control systems. Build a ROS2 module with following components:
** Node
Create a node that stores the temperature of the room
The node exposes:
*** A service that returns the current temperature
*** A temperature monitor that publishes the current temperature of the room after every 1 second
*** A service that tries to increase/decrease the temperature of a room by 1 degree.
But as all systems have errors and temperature can't rise instantaneously, so we are going to simulate this errors and delays with randomness.
#+BEGIN_SRC python
  async service increment_temperature:
    can_increase_temperature = random(true, false)
    if !can_increase_temperature:
        return temperature
    sleep(random(0.1s, 0.5s))
    temperature += 1
    return temperature
#+END_SRC
This service can be extended with decrement functionality
*** An action server that can be used to control the temperature of a room.
**** Action Message:
      desired_temperature: integer
**** Task:
      The server should receive a goal message with the desired temperature
      and then adjust the room's temperature accordingly with the help of increment_decrement_temperature service defined above.
**** Feedback:
      current_temperature: integer
